version: '1.0'

stages:
- clone
- prepare
- test
- build
- deploy

steps:
    cloning:
        title: Cloning main repository...
        type: git-clone
        repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
        revision: '${{CF_REVISION}}'
        stage: 'clone'

#    prepare:
#        stage: 'prepare'
#        type: build
#        title: Builds my service for testing
#        working_directory: ${{CF_REPO_NAME}}
#        dockerfile: docker/Dockerfile
#        image_name: anthonykgross/anthonykgrossfr
#        tag: ${{CF_BRANCH}}
#
#    tests:
#        stage: 'test'
#        type: composition
#        title: Run unit tests
#        working_directory: ${{CF_REPO_NAME}}
#        composition:
#            version: '2'
#            services:
#                mysql:
#                    image: mysql:5.7
#                    ports:
#                        - 3306
#                    environment:
#                        MYSQL_DATABASE: $MYSQL_DATABASE
#                        MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
#
#        composition_candidates:
#            test:
#                image: ${{prepare}}
#                links:
#                    - mysql:mysql
#                command: bash -c 'sleep 30 && cp -f .env.test .env && php bin/console doctrine:schema:update --force && entrypoint.sh tests'
#
#        composition_variables:
#            - MYSQL_ROOT_PASSWORD=root
#            - MYSQL_DATABASE=anthonykgrossfr_test

    build:
        stage: 'build'
        type: build
        title: Builds my service
        working_directory: ${{CF_REPO_NAME}}
        dockerfile: docker/Dockerfile
        image_name: anthonykgross/anthonykgrossfr
        tag: ${{CF_BRANCH}}
        no_cache: true
        no_cf_cache: true
        build_arguments:
            - APPLICATION_ENV=prod
            - MAILER_USER=${{MAILER_USER}}
            - MAILER_PASSWORD=${{MAILER_PASSWORD}}
            - DB_USER=${{DB_USER}}
            - DB_PASSWORD=${{DB_PASSWORD}}
            - DB_HOST=${{DB_HOST}}
            - DB_NAME=${{DB_NAME}}
            - ALGOLIA_APP_ID=${{ALGOLIA_APP_ID}}
            - ALGOLIA_ADMIN_KEY=${{ALGOLIA_ADMIN_KEY}}
            - ALGOLIA_API_KEY=${{ALGOLIA_API_KEY}}
            - ADMIN_USER=${{ADMIN_USER}}
            - ADMIN_SHA512_PASSWORD=${{ADMIN_SHA512_PASSWORD}}
        when:
            branch:
                only: [ master ]

    deploy:
        stage: 'deploy'
        title: Deployment
        image: cdrx/rancher-gitlab-deploy
        commands:
            - upgrade --environment ${{RANCHER_ENV}} --stack ${{RANCHER_STACK}} --service ${{RANCHER_SERVICE}} --no-start-before-stopping --no-wait-for-upgrade-to-finish
        when:
            branch:
                only: [ master ]
