{% extends 'base.html.twig' %}

{% block title %}Faire du multi streaming sur Twitch, Dailymotion, Youtube & Hitbox{% endblock %}
{% block description %}Streamer ses jeux favoris sur Internet, mis en place un système qui permet de diffuser sur toutes les platformes de votre choix votre live.{% endblock %}
{% block og_url %}http://{{ app.request.host ~ path('anthonykgrossfr_page_lire', {'name' : 'multi-streaming-broadcaster-twitch-youtube-dailymotion-hitbox' }) }}{% endblock %}
{% block og_image %}http://{{ app.request.host ~  asset("bundles/anthonykgrossfrmain/images/Articles/docker-broadcaster.png") }}{% endblock %}

{% block javascripts %}
<script type="application/ld+json">
    {
        "@context": "http://schema.org",
        "@type": "NewsArticle",
        "mainEntityOfPage":{
            "@type":"WebPage",
            "@id":"{{ block("og_url") }}"
        },
        "headline": "{{ block("title") }}",
        "image": {
            "@type": "ImageObject",
            "url": "{{ block("og_image") }}",
            "height": 400,
            "width": 1200
        },
        "datePublished": "{{ "2015-09-09"|date("c") }}",
        "dateModified": "{{ "2015-09-09"|date("c") }}",
        "author": {
            "@type": "Person",
            "name": "Anthony GROSS"
        },
        "publisher": {
            "@type": "Organization",
            "name": "AnthonyKGROSS",
            "logo": {
                "@type": "ImageObject",
                "url": "http://anthonykgross.fr/images/akg-wide.png",
                "width": 80,
                "height": 60
            }
        },
        "description": "{{ block("description") }}"
    }
</script>
{% endblock %}

{% block body %}
    <div class="container">
        <section id="blog" class="single-page">
            <div class="header margin-bottom40">
                <h2>Faire du multi streaming sur Twitch, Dailymotion, Youtube & Hitbox</h2>
                <p>
                    &Agrave; la demande de mon frère qui souhaite lui aussi se mettre à streamer ses jeux favoris sur Internet, 
                    j'ai mis en place un système qui permet de diffuser sur toutes les platformes de votre choix votre live.
                    &laquo;Nan mais Antho, c'est quelle plateforme qu'est la mieux ?&raquo; Perso, moi j'en sais rien donc pour remédier au problème : &laquo;Ne choisit pas, fait les toutes ! &raquo;. 
                    Je vais vous montrer comment streamer sur toutes les plateformes en capturant qu'une seule fois.
                </p>
            </div>
            <div class="row">
                <div class="span12">
                    <div class="row">
                        <div class="span12">
                            <div class="row">
                                <div class="span6">
                                    <h3>Prérequis</h3>
                                    <ul>
                                        <li>Un serveur distant avec une bonne connexion Internet</li>
                                        <li>Un minimum de connaissances en système Unix</li>
                                        <li>Docker</li>
                                        <li>Un logiciel de capture video : SplitBroadcaster, OBS, etc ... </li>
                                    </ul>
                                </div>
                                <div class="span6">
                                    <h3>Mon environnement pour le tutoriel</h3>
                                    <ul>
                                        <li>Un serveur distant : Ok ! Debian 8 - kimsufi (OVH) entrée de gamme</li>
                                        <li>Docker 1.8.1 & Docker-Compose 1.3.1</li>
                                        <li>OBS (Opensource Broadcasting Software)</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span12">
                    <div class="row">
                        <div class="span12">
                            <h3>Installation</h3>
                            <div class="row">
                                <div class="span6">
                                    <h4>&Eacute;tape 1 - Docker</h4>
                                    <p>
                                        Je vais faire simple car ce n'est pas le sujet de l'article.
<pre><code class="language-bash">
# Debian 8
# Installation de git, curl & pip (pour docker compose)
apt-get install git curl python-pip
# Installation de docker
curl -sSL https://get.docker.com/ | sh
# Installation de docker-compose
pip install -U docker-compose
</code></pre>
                                    </p>
                                </div>
                                <div class="span6">
                                    <h4>&Eacute;tape 2 - anthonykgross/docker-broadcaster</h4>
                                    <p>
                                        Pour streamer sur toutes les plateformes, je vous invite à télécharger l'image Docker.
<pre><code class="language-bash">
# Debian 8
git clone https://github.com/anthonykgross/docker-broadcaster.git
cd docker-broadcaster/
# On rend executable le script de génération de l'image.
chmod +x create-image.sh
# Et on génére l'image
./create-image.sh
</code></pre>
                                    </p>
                                </div>
                            </div>
                            <h4>Explications</h4>
                            <p>
                                Pour ce qui est de l'étape 1, nous avons seulement installer des outils utiles pour l'installation de Docker et la seconde étape, c'est la récupération de l'image <b>anthonykgross/docker-broadcaster</b> que nous aurons besoin. 
                                Bien entendu, il n'est pas &laquo;nécéssaire&raquo; de récupérer l'image via <a href="https://github.com/anthonykgross/docker-broadcaster" target="_blank">Github</a> car celle-ci est disponible sur le <a href="https://hub.docker.com/r/anthonykgross/docker-broadcaster/" target="_blank">Docker Hub</a> mais je préfère, pour les néophytes, que vous en ayez trop que pas assez.
                            </p>
                            <p>
                                En effet, dans le répertoire <b>docker-broadcaster</b>, vous avez un fichier <b>docker-compose.yml</b> qui est très important. Si vous l'ouvrez avec un éditeur de texte, vous verrez que celui-ci possède déjà toutes les configurations possibles de notre image. 
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span12">
                    <div class="row">
                        <div class="span12">
                            <h3>Configuration</h3>
                            <p>
                                Pour cette étape, je vous invite à vous inscrire à toutes les plateformes en question. Bien entendu, vous n'êtes <b>pas obligé</b> de streamer sur TOUTES. 
                                Choisissez celles qui vous plaisent.
                            </p>
                                Dans mon cas, les plateformes m'ont donné :
                                <ul>
                                    <li><b>Youtube</b> => RTMP URL : "rtmp://a.rtmp.youtube.com/live2" ; Clé : "poopaplla-7537.ea0k-ef3-czsz"</li>
                                    <li><b>Hitbox</b> => RTMP URL : "rtmp://live.hitbox.tv/push" ; Clé : "qsfqf?key=Jn6Dsqdqsd8cpx"</li>
                                    <li><b>Twitch</b> => RTMP URL : "rtmp://live-cdg.twitch.tv/app" ; Clé : "live_101724967_qLZMlwnxxpKqsqsfJ5lNcBcP0RYtpw"</li>
                                    <li><b>Dailymotion</b> => RTMP URL : "rtmp://publish.dailymotion.com/publish-dm" ; Clé : "24646?auth=qeGP_9fb42e109944fa5b504e191"</li>
                                </ul>
                            </p>
                            <div class="row">
                                <div class="span6">
                                    <h5>L'originale</h5>
<pre><code class="language-bash">
# docker-compose.yml
broadcaster:
  image: anthonykgross/docker-broadcaster
#  environment:
#    YOUTUBE_URL: rtmp://a.rtmp.youtube.com/live2
#    YOUTUBE_STREAMKEY: "NULL"
#    TWITCH_URL: rtmp://live-cdg.twitch.tv/app
#    TWITCH_STREAMKEY: "NULL"
#    HITBOX_URL: rtmp://live.hitbox.tv/push
#    HITBOX_STREAMKEY: "NULL"
#    DAILYMOTION_URL: rtmp://publish.dailymotion.com/publish-dm
#    DAILYMOTION_STREAMKEY: "NULL"
#    YOUR_IP: YOUR_IP
#    PRIVATE_KEY: anthonykgross
#    EXPIRATION_TOKEN: 3600
#    STREAM_SPECIFIER: hd720
#    URL_TRANSCODE: transcode
#    URL_LIVE: live
  ports:
    - 8080:8080
    - 1935:1935
  volumes:
    - ./log:/log
</code></pre>
                                </div>
                                <div class="span6">
                                    <h5>Ce que nous voulons ! </h5>
<pre><code class="language-bash">
# docker-compose.yml
broadcaster:
  image: anthonykgross/docker-broadcaster
  environment:
    YOUTUBE_URL: rtmp://a.rtmp.youtube.com/live2
    YOUTUBE_STREAMKEY: "poopaplla-7537.ea0k-ef3-czsz"
    TWITCH_URL: rtmp://live-cdg.twitch.tv/app
    TWITCH_STREAMKEY: "live_101724967_qLZMlwnxxpKqsqsfJ5lNcBcP0RYtpw"
    HITBOX_URL: rtmp://live.hitbox.tv/push
    HITBOX_STREAMKEY: "qsfqf?key=Jn6Dsqdqsd8cpx"
    DAILYMOTION_URL: rtmp://publish.dailymotion.com/publish-dm
    DAILYMOTION_STREAMKEY: "24646?auth=qeGP_9fb42e109944fa5b504e191"
    YOUR_IP: 213.251.184.131
    PRIVATE_KEY: R5Gjtc2BPU38DngL
    EXPIRATION_TOKEN: 36036000 #1an
#    STREAM_SPECIFIER: hd720
#    URL_TRANSCODE: transcode
#    URL_LIVE: live
  ports:
    - 8080:8080
    - 1935:1935
  volumes:
    - ./log:/log
</code></pre>
                                </div>
                            </div>
                            <p>
                                &laquo;Mais à quoi peuvent servir les autres paramêtres ? (<b>YOUR_IP</b>, <b>PRIVATE_KEY</b> & <b>EXPIRATION_TOKEN</b>) &raquo; - Déjà, pour <b>YOUR_IP</b> : Mettez la votre, pas la mienne ! Vous n'êtes pas obligé de la renseigner mais pour la suite ça pourrait être utile.<br/>
                                <b>PRIVATE_KEY</b> est un paramêtre qui vous servira à sécuriser votre serveur. Sinon ? Si vous ne sécuriser pas votre serveur et que quelqu'un parvient à prendre votre URl de streaming => il streamera sur tous vos comptes à votre place donc pensez bien à la changer régulièrement.<br/>
                                <b>EXPIRATION_TOKEN</b> permet de donner une validité à votre token que nous verrons plus tard. Si vous mettez 3600 (secondes) soit 1h, vous ne pourrez plus diffuser votre video après 1h de live car votre token sera périmé.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span12">
                    <div class="row">
                        <div class="span12">
                            <h3>Exécution</h3>
                            <p>
                                J'arrête de vous faire languir : place au spetacle ! Pour lancer le l'image Docker :
                            </p>
                            <p>
                                <b>Méthode 1</b> (Conseillée)
                            </p>
<pre class="language-bash"><code>
docker-compose up -d
</code></pre>
                            <p>
                                Cette commande va lire le fichier <b>docker-compose.yml</b> et créer le container en conséquence avec tous les paramêtres. Bien entendu, vous pouvez éviter de passer par <b>Compose</b> mais vous devrez à chaque fois renseigner vos paramêtres.<br/>
                            </p>
                            <p>
                                <b>Méthode 2</b>
                            </p>
<pre class="language-bash"><code>
docker run -e "YOUTUBE_URL=rtmp://a.rtmp.youtube.com/live2" -e "YOUTUBE_STREAMKEY=poopaplla-7537.ea0k-ef3-czsz" ... anthonykgross/docker-broadcaster
</code></pre>
                            <p>
                                Cette commande <b>ne lira pas</b> le fichier <b>docker-compose.yml</b> donc il n'ait pas nécessaire de le remplir. Vous devez lui envoyer toute votre configuration en paramêtre.
                            </p>
                            <p>
                                Donc si tout se passe bien, rien ne devrez se passer ! Bizarre? Non, c'est parfait !
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span12">
                    <div class="row">
                        <div class="span12">
                            <h3>Diffusion</h3>
                            <p>
                                Vérifions tout d'abord que votre image Docker marche correctement.
                            </p>
<pre class="language-bash"><code>
docker ps

CONTAINER ID        IMAGE                              COMMAND             CREATED             STATUS              PORTS                                            NAMES
4df494575536        anthonykgross/docker-broadcaster   "/entrypoint.sh"    21 hours ago        Up 21 hours         0.0.0.0:1935->1935/tcp, 0.0.0.0:8080->8080/tcp   dockerbroadcaster_broadcaster_1
</code></pre>
                            <p>
                                Donc jusqu'ici tout va bien : mon container est en marche et son <b>CONTAINER ID</b> est <b>4df494575536</b>! Nous allons chercher mes identifiants pour streamer sur ma machine grâce justement à cet ID.  
                            </p>
<pre class="language-bash"><code>
docker logs 4df494575536


broadcaster_1 | ===============================================================================================
broadcaster_1 | =
broadcaster_1 | = TWITCH_STREAMKEY      : live_101724967_qLZMlwnxxpKqsqsfJ5lNcBcP0RYtpw
broadcaster_1 | = HITBOX_STREAMKEY      : qsfqf?key=Jn6Dsqdqsd8cpx
broadcaster_1 | = YOUTUBE_STREAMKEY     : poopaplla-7537.ea0k-ef3-czsz
broadcaster_1 | = DAILYMOTION_STREAMKEY : 24646?auth=qeGP_9fb42e109944fa5b504e191
broadcaster_1 | =
broadcaster_1 | = URL live            = rtmp://213.251.184.131:1935/live/
broadcaster_1 | = URL transcode       = rtmp://213.251.184.131:1935/transcode/
broadcaster_1 | = Stream Key          = stream?e=1441722597&st=wxcwxcazeee
broadcaster_1 | = Expiration token    = 09-08-2015 02:29:57 PM (in 3600 sec.)
broadcaster_1 | =
broadcaster_1 | ===============================================================================================
</code></pre>
                            <p>
                                Le container nous affiche tous nos paramêtres afin de vérfier que ceux-ci ont bien été pris en compte.<br/>
                                De plus, si vous avez renseigné <b>YOUR_IP</b>, vous avez à votre disponibilité deux URLs: <b>live</b> et <b>transcode</b>. Pour ce qui est de <b>transcode</b>, c'est une version beta donc je ne vous conseille pas de l'utiliser pour l'instant. Pour ce qui est de <b>live</b>, c'est celle-ci qui nous intéresse ainsi que <b>Stream Key</b> 
                            </p>
                            <h4>STRREEEEAAAMMMIIINNNGGGG !!! </h4>
                            <p>
                                Sur votre pc de maison, vous ouvrez <b>OBS</b> (ou <b>XplitBroadcaster</b>) et vous renseignez dans <b>RTMP-URL</b> "rtmp://YOUR_IP:1935/live/" (à remplacer par la votre hein?!).</br>
                                Ensuite, dans la clé du flux, vous mettez votre ... <b>Stream Key</b>.<br/>
                                Et si tout se passe bien ... <b>CA MARCHE</b> ! Vous pouvez vous rendre sur tous vos profiles publiques de toutes les plateformes que vous avez choisi et vous devriez voir votre belle video.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span6">
                    <blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr"><a href="https://twitter.com/AnthonyKGROSS">@AnthonyKGROSS</a> docker-broadcaster is awesome dude, thanks for publishing it!</p>&mdash; Jorge Castro (@castrojo) <a href="https://twitter.com/castrojo/status/791739163481550848">October 27, 2016</a></blockquote>
                    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
                </div>
                <div class="span6">
                    <a href="https://github.com/anthonykgross/docker-broadcaster/stargazers" target="_blank">
                        <img src="{{ asset("bundles/anthonykgrossfrmain/images/Articles/github-docker-broadcaster.png") }}" />
                    </a>
                </div>
            </div>
            <div class="row">
                <div class="span12">
                    <div class="row">
                        <div class="span12">
                            <h3>Conclusion</h3>
                            <p>
                                Dans un premier temps, sachez que je m'excuse pour les fautes d'orthographe : j'ai du écrire rapidement cet article car j'en ai un peu trop fait la promo sur les réseaux sociaux !
                                Sachez néanmoins que ça m'a beaucoup appris de Docker en réalisant cette image. <br/>Pour finir je voudrais remercier mon frangin qui, avec ses idées à la con parfois, m'a donné un bel objectif : J'te kiff' bro!
                                Ah et ... merci à Clément Vidal pour m'avoir fait comprendre quelques subtilités de Docker et m'avoir aidé à écrire la doc en anglais (en cours de relecture).<br/>
                                Sur ce, j'ai garé mon panda en double file. Tchou !
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            <br/>
            <div class="meta-desc">
                <i class="fa fa-calendar"></i> &nbsp; Le 9 Septembre 2015 <span class="font-slight"></span> 
            </div>
            <br/>
            <div class="fb-comments" data-href="{{ block("og_url") }}" data-numposts="5" data-width="100%"></div>
        </section> <!-- End blog -->
    </div> <!-- End container -->
{% endblock %}